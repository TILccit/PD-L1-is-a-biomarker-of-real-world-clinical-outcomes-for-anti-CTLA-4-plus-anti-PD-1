###################################### This R script was used to clean patient cohort and then perform Propensity based matching ##############################################
#Clean workspace
rm(list = ls(envir = .GlobalEnv), envir = .GlobalEnv)

library(data.table)
library(stringr)
library(dplyr)
library(ggplot2)
library(MatchIt)
library(survival)
library(survminer)
library(survey)

# Loading CSV file with patient info
dataDF <- read.csv(file=paste0("path_to_file", "file.csv"), header = TRUE,check.names = FALSE,sep = ";",dec = ",",stringsAsFactors = FALSE)
head(dataDF)

## HERE we define for which parameters we want to do univariate analysis, and which to include in the multivariate survival analysis.
## PLEASE define name as it is on the csv file, the name needs to be in BRACKETS
features <- c("gender", "age_1st_treat","treatment_correct","braf_correct","adjuvant_correct","metastase_hjerne",
              "pd_l1_correct","LDH","PS", "stage")

## Define which columns include survival data
OS_time <- c("OS_days")
OS_status <- c("Dead_mel")
PFS_time <- c("PFS_days")
PFS_status <- c("Progressed")
## DEFINE IF YOU ARE DOING OS OR PFS
surv_time <-PFS_time
surv_status <-PFS_status
surv_time_label <- "PFS"
# KM plots labels
xlabel=".PFS.days"

## DEFINE WHICH COLUMNS ARE CATEGORICAL
categ_feats <-c("gender","treatment_correct","braf_correct","adjuvant_correct","metastase_hjerne",
                "pd_l1_correct","LDH","PS", "stage")

## DEFINE WHICH COLUMNS ARE NUMERICAL
# we also add the status and time columns
numeric_feats <-c("OS_days", "Dead_mel","PFS_days","Progressed","age_1st_treat")

# Remove spaces from column names and features.
colnames(dataDF) <- gsub(" ","_",colnames(dataDF))
features <- gsub(" ","_",features)
categ_feats <- gsub(" ","_",categ_feats)
numeric_feats <- gsub(" ","_",numeric_feats)
OS_time <- gsub(" ","_",OS_time)
OS_status <- gsub(" ","_",OS_status)
PFS_time <- gsub(" ","_",PFS_time)
PFS_status <- gsub(" ","_",PFS_status)
surv_time <- gsub(" ","_",surv_time)
surv_status <- gsub(" ","_",surv_status)

## FIRST MAKE SURE THERE ARE NO BLANKS ANYWHERE IN THE DATA
## Find non-Numeric columns
num_cols <- unlist(lapply(dataDF, is.numeric))         # Identify numeric columns
dataDF <- cbind(apply(dataDF[,!num_cols], 2, str_remove_all, " "),dataDF[,num_cols])   # Remove blanks

### NOW MAKE SURE THAT THE COLUMNS ARE IN THE CORRECT FORMAT NEEDED FOR ANALYSIS.
## Numeric columns
dataDF <- dataDF %>% mutate(across(all_of(numeric_feats), as.numeric))

## Categorical
dataDF <- dataDF %>% mutate(across(all_of(categ_feats), as.character))

# We need to transform character columns to categorical, to have the different levels
dataDF <- dataDF %>% mutate(across(all_of(categ_feats), as.factor))
dataDF <- dataDF %>% select(all_of(c(colnames(dataDF)[1], OS_time,OS_status,PFS_time,PFS_status, features))) %>% distinct()

## LET's LOOK AT A SUMMARY OF THE DATA
summary(dataDF)

# Survival object
surv_obj <- Surv(dataDF$OS_days, dataDF$Dead_mel)

# Combine all variables into a data frame
data <- cbind(dataDF, surv_obj)

# Compute the Kaplan-Meier model
fit_overall = survfit(Surv(dataDF$OS_days, dataDF$Dead_mel) ~ treatment_correct, data=data)
print(fit_overall)

ggsurvplot(fit_overall,
           data=data,
           xlab="Days",
           ylab="Overall survival probability",
           pval = TRUE, conf.int = TRUE,
           risk.table = TRUE, # Add risk table
           risk.table.col = "strata", # Change risk table color by groups
           linetype = "strata", # Change line type by groups
           surv.median.line = "hv", # Specify median survival
           ggtheme = theme_bw(), # Change ggplot2 theme
           palette = c("#E7B800", "#2E9FDF"))

# Log-Rank test comparing survival curves: survdiff()
surv_diff <- survdiff(Surv(dataDF$OS_days, dataDF$Dead_mel) ~ treatment_correct, data=data)

# Perform nearest neighbor matching without weights
psm_data <- matchit(treatment_correct ~ gender + age_1st_treat + braf_correct + adjuvant_correct + metastase_hjerne + 
                      LDH + PS + stage, data = data, method = "nearest", distance = "logit", ratio = 1,
                      caliper = 0.05, std.caliper = F)

# Assess balance between treatment groups
summary(psm_data)

## Love plot matching
plot(summary(psm_data), abs = F)

# Fit a logistic regression model to estimate propensity scores
model <- glm(treatment_correct ~ gender + age_1st_treat  + braf_correct + adjuvant_correct + metastase_hjerne + LDH + PS + stage, data = data, family = "binomial")
coefficients(model)

# Fit Cox proportional hazards regression model to matched data
matched_data <- match.data(psm_data)

# Save matched data for futher analysis.
save(matched_data, file = "matched_data_PD_1_ipinivo_stage_below1.Rdata")
